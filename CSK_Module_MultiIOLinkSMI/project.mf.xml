<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<manifest>
    <application name="CSK_Module_MultiIOLinkSMI">
        <crown name="CSK_Module_MultiIOLinkSMI">
            <desc>This is an automatically generated CROWN (description not necessary).</desc>
        </crown>
        <crown name="CSK_MultiIOLinkSMI">
            <trait>released</trait>
            <desc>This CSK module provides an easy access to IO-Link functionality of AppSpace controller. +
It is highly recommended to use this module along with the following CSK modules: +
- CSK_1stModule_Logger - for logging data processing issues +
- CSK_Module_IODDInterpreter - for easy combining of read/write messages to be received/sent from/to IO-Link device +
- CSK_Module_PersistentData - to save configured read/write messages as well as process data structure if it is variable +
- CSK_Module_PowerManager - to power the necessary IO-Link ports +
{empty} +
The main externally useful features are following: +
{empty} +
**1. Generic CSK functionality:** +
Each instance is handled in a separate thread. Useful Instance functions: +
- "addInstance" - to create a new instance +
- "setSelectedInstance" - to select instance you are working on +
{empty} +
**2. Port handling** +
- "setPort" - to set port used by the instance +
- "activateInstance" - to start/stop IO-Link functionality for the selected port +
- The event "OnNewPortEvent" notifies new IO-Link port event +
{empty} +
**3. Connected IO-Link device identification handling** +
If the device's process data structure is variable, the module makes sure that the saved structure option is applied at the device after reboot/reconnection. +
- "getDeviceIdentification" - to get identification table of connected device +
- "applyNewDeviceIdentification" - to start using a newly connected device instead of saved one +
- The event "OnNewDeviceIdentificationApplied" can be used to notify external apps that new identification is applied +
{empty} +
**4. Read and write messages handling** +
Messages to be read or written from/to device are sets of data combined based on selection in respective dynamic tables in UI. +
Each message has its own IODD instance at the background. +
After message configuration, the JSON template is available in UI for the reference. +
The structure of the write message must comply with the generated JSON template. +
{empty} +
Each read message has its own event to register to exteranlly. +
The event name is **"CSK_MultiIOLinkSMI.readMessage" .. port .. readMessageName** +
{empty} +
Each write message has its own function to be called externally. +
The function name is **"CSK_MultiIOLinkSMI.writeMessage" .. port .. writeMessageName** +
{empty} +
Use following functions to handle messages: +
- "createIODDReadMessage" and "createIODDWriteMessage" - to create the message +
- "setIODDReadMessageName" and "setIODDWriteMessageName" - to rename the message +
- "setSelectedIODDReadMessage" and "setSelectedIODDWriteMessage" - to select the current message +
- "deleteIODDReadMessage" and "deleteIODDWriteMessage" - to delete message +
- "getIODDReadMessageJSONTemplate" and "getIODDWriteMessageJSONTemplate" - to get JSON structure (template) of the message to be received or sent +
{empty} +
**5. Direct data reading/writing** +
The following functions can be used for reading or writing data by selected instance directly: +
- "readProcessData" and "writeProcessData" - to read/write process data using IODD interpretation at the background +
- "readParameter" and "writeParameter" - to read/write parameters using IODD interpretation at the background +
- "readProcessDataByteArray" and "writeProcessDataByteArray" - to read/write row byte arrays of process data (no IODD needed) +
- "readParameterByteArray" and "writeParameterByteArray" - to read/write row byte arrays of parameter (no IODD needed) +
- "readIODDMessage" and "writeIODDMessage" - to read/write preconfigured messages +</desc>
            <serves>
                <event name="OnNewStatusLoadParameterOnReboot">
                    <desc>Notify status if parameters should be loaded on app-/device- boot up.</desc>
                    <param desc="Status." multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnPersistentDataModuleAvailable">
                    <desc>Notify status if features of CSK_PersistentData module are available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewInstanceList">
                    <desc>Event to provide list of created instances</desc>
                    <param desc="List of created instances" multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewProcessingParameter">
                    <desc>Event to share processing parameters to the instances.</desc>
                    <param desc="Number of the instance to receive the parameter." multiplicity="1" name="objectNo" type="int"/>
                    <param desc="Name of the parameter." multiplicity="1" name="parameter" type="string"/>
                    <param desc="Value of the parameter." multiplicity="1" name="value" type="auto"/>
                    <param desc="If parameter is for specifici internal used object, its number." multiplicity="?" name="internalObjectNo" type="int"/>
                </event>
                <event name="OnNewSelectedInstance">
                    <desc>Notify if new instance is selected.</desc>
                    <param desc="Selected instance." multiplicity="1" name="selectedObject" type="int"/>
                </event>
                <event name="OnDataLoadedOnReboot">
                    <desc>Event to call if module tried to load parameters and should be ready.</desc>
                </event>
                <event name="OnNewResultNUM">
                    <desc>Example of dynamically created event to provide result of instance. +
NUM will be replaced by the number of instance (e.g. "OnNewResult1"). +
INFO: Other modules can check via "Script.isServedAsEvent" if event of sepecific instance exists.</desc>
                    <param desc="Result" multiplicity="1" name="result" type="bool"/>
                </event>
                <event name="OnNewParameterName">
                    <desc>Notify name of persistent data parameter.</desc>
                    <param desc="Parameter name" multiplicity="1" name="name" type="string"/>
                </event>
                <event name="OnUserLevelOperatorActive">
                    <desc>Status of Operator userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelMaintenanceActive">
                    <desc>Status of Maintenance userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelServiceActive">
                    <desc>Status of Service userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelAdminActive">
                    <desc>Status of Admin userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewValueUpdateNUM">
                    <desc>Example of dynamically created event to sync paramters between instance threads and Controller part of module. +
NUM will be replaced by the number of instance (e.g. "OnNewResult1"). +</desc>
                    <param desc="Instance new value is coming from." multiplicity="1" name="instance" type="int"/>
                    <param desc="Name of the paramter to update/sync." multiplicity="1" name="parameter" type="string"/>
                    <param desc="Value to update." multiplicity="1" name="value" type="auto"/>
                    <param desc="Optionally if internal parameter should be used for internal objects." multiplicity="?" name="selectedObject" type="int"/>
                </event>
                <event name="OnNewValueToForwardNUM">
                    <desc>Example of dynamically created event to forward data from instance thread to Controller part of module, e.g. to forward values to UI. +
NUM will be replaced by the number of instance (e.g. "OnNewValueToForward1"). +</desc>
                    <param desc="Eventname to use to forward value." multiplicity="1" name="eventname" type="string"/>
                    <param desc="Value to forward." multiplicity="1" name="value" type="auto"/>
                </event>
                <event name="OnNewPort">
                    <desc>Event to show selected IO-Link port in UI.</desc>
                    <param desc="Port." multiplicity="1" name="Port" type="string"/>
                </event>
                <event name="OnNewStatusInstanceActive">
                    <desc>Notify if instance is activated.</desc>
                    <param desc="State of instance." multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewPortDropdown">
                    <desc>Event to show list of ports in UI.</desc>
                    <param desc="Verialized list of ports." multiplicity="1" name="PortDropdown" type="string"/>
                </event>
                <event name="OnNewReadJSONTemplate">
                    <desc>Event to show JSON template of configured reading message.</desc>
                    <param desc="JSON template." multiplicity="?" name="readJSONTemplate" type="string"/>
                </event>
                <event name="OnNewWriteJSONTemplate">
                    <desc>Event to show JSON template of configured write message.</desc>
                    <param desc="JSON template." multiplicity="?" name="writeJSONTemplate" type="string"/>
                </event>
                <event name="OnNewStatusModuleIsActive">
                    <desc>Notify if module can be used on device.</desc>
                    <param desc="Status." multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewVendorName">
                    <trait>released</trait>
                    <desc>Event to show the vendor name of connected IO-Link device.</desc>
                    <param desc="Vendor name." multiplicity="1" name="vendorName" type="string"/>
                </event>
                <event name="OnNewVendorText">
                    <trait>released</trait>
                    <desc>Event to show the vendor text of connected IO-Link device.</desc>
                    <param desc="Vendor text." multiplicity="1" name="vendorText" type="string"/>
                </event>
                <event name="OnNewVendorId">
                    <trait>released</trait>
                    <desc>Event to show the vendor ID of connected IO-Link device.</desc>
                    <param desc="Vendor ID." multiplicity="1" name="vendorId" type="string"/>
                </event>
                <event name="OnNewProductName">
                    <trait>released</trait>
                    <desc>Event to show the product name of connected IO-Link device.</desc>
                    <param desc="Product name." multiplicity="1" name="productName" type="string"/>
                </event>
                <event name="OnNewProductText">
                    <trait>released</trait>
                    <desc>Event to show the product text of connected IO-Link device.</desc>
                    <param desc="Product text." multiplicity="1" name="productText" type="string"/>
                </event>
                <event name="OnNewProductId">
                    <trait>released</trait>
                    <desc>Event to show the product id of connected IO-Link device.</desc>
                    <param desc="Product ID." multiplicity="1" name="productId" type="string"/>
                </event>
                <event name="OnNewSerialNumber">
                    <trait>released</trait>
                    <desc>Event to show the serial number of connected IO-Link device.</desc>
                    <param desc="Serial number." multiplicity="1" name="serialNumber" type="string"/>
                </event>
                <event name="OnNewHardwareVersion">
                    <trait>released</trait>
                    <desc>Event to show the hardware version of the device.</desc>
                    <param desc="Hardware version." multiplicity="1" name="hardwareVersion" type="string"/>
                </event>
                <event name="OnNewFirmwareVersion">
                    <trait>released</trait>
                    <desc>Event to show the firmware version of the device.</desc>
                    <param desc="Firmware version." multiplicity="1" name="firmwareVersion" type="string"/>
                </event>
                <event name="OnNewPortEvent">
                    <trait>released</trait>
                    <desc>Event to show the new status of active IO-Link port. Can be used externally.</desc>
                    <param desc="Port ID." multiplicity="1" name="port" ref="IOLinkMasterPorts" type="enum"/>
                    <param desc="IO-Link event type." multiplicity="1" name="eventType" ref="IOLink.SMI.EventTypes" type="enum"/>
                    <param desc="Description of IO-Link event." multiplicity="1" name="eventDescription" type="string"/>
                </event>
                <event name="OnNewNewDeviceFirmwareVersion">
                    <trait>released</trait>
                    <desc>Event to show the firmware version of new discovered device.</desc>
                    <param desc="Firmware version." multiplicity="1" name="firmwareVersion" type="string"/>
                </event>
                <event name="OnNewNewDeviceHardwareVersion">
                    <trait>released</trait>
                    <desc>Event to show the hardware version of new discovered device.</desc>
                    <param desc="Hardware version." multiplicity="1" name="hardwareVersion" type="string"/>
                </event>
                <event name="OnNewNewDeviceSerialNumber">
                    <trait>released</trait>
                    <desc>Event to show the serial number of new discovered device.</desc>
                    <param desc="Serial number." multiplicity="1" name="serialNumber" type="string"/>
                </event>
                <event name="OnNewNewDeviceVendorId">
                    <trait>released</trait>
                    <desc>Event to show the vendor ID of new discovered device.</desc>
                    <param desc="Vendor ID." multiplicity="1" name="vendorId" type="string"/>
                </event>
                <event name="OnNewNewDeviceProductId">
                    <trait>released</trait>
                    <desc>Event to show the product id of new discovered device.</desc>
                    <param desc="Product ID." multiplicity="1" name="productId" type="string"/>
                </event>
                <event name="OnNewNewDeviceProductName">
                    <trait>released</trait>
                    <desc>Event to show the product name of new discovered device.</desc>
                    <param desc="Product name." multiplicity="1" name="productName" type="string"/>
                </event>
                <event name="OnNewNewDeviceProductText">
                    <trait>released</trait>
                    <desc>Event to show the product text of new discovered device.</desc>
                    <param desc="Product text." multiplicity="1" name="productText" type="string"/>
                </event>
                <event name="OnNewNewDeviceVendorName">
                    <trait>released</trait>
                    <desc>Event to show the vendor name of new discovered device.</desc>
                    <param desc="Vendor name." multiplicity="1" name="vendorName" type="string"/>
                </event>
                <event name="OnNewNewDeviceVendorText">
                    <trait>released</trait>
                    <desc>Event to show the vendor text of new discovered device.</desc>
                    <param desc="Vendor text." multiplicity="1" name="vendorText" type="string"/>
                </event>
                <event name="OnNewListProcessDataCondition">
                    <trait>released</trait>
                    <desc>Event to provide list of process data structure options.</desc>
                    <param desc="List of process data structure options." multiplicity="1" name="jsonListProcessDataCondition" type="string"/>
                </event>
                <event name="OnNewProcessDataCondition">
                    <trait>released</trait>
                    <desc>Event to show selected IO-Link procecss data option of connected device in UI.</desc>
                    <param desc="Selected variant of process data structure." multiplicity="1" name="condition" type="string"/>
                </event>
                <event name="OnNewStatusProcessDataVariable">
                    <trait>released</trait>
                    <desc>Event to show additional settings if process data of the IO-Link device has a variable structure.</desc>
                    <param desc="State" multiplicity="1" name="state" type="bool"/>
                </event>
                <event name="OnNewPortStatus">
                    <trait>released</trait>
                    <desc>Event to show current port status of selected IO-Link port in UI.</desc>
                    <param desc="Status of the port." multiplicity="1" name="postStatus" type="string"/>
                </event>
                <event name="OnNewStatusNewDeviceFound">
                    <trait>released</trait>
                    <desc>Event to notify if there is a new device discovered on selected port. Used to show settings in UI.</desc>
                    <param desc="State" multiplicity="1" name="state" type="bool"/>
                </event>
                <event name="OnNewSelectedTab">
                    <trait>released</trait>
                    <desc>Notify to show selected tab.</desc>
                    <param desc="Tab ID." multiplicity="1" name="tabNumber" type="int"/>
                </event>
                <event name="OnNewSelectedIODDReadMessage">
                    <trait>released</trait>
                    <desc>Event to show selected read message.</desc>
                    <param desc="Name of the read message." multiplicity="1" name="messageName" type="string"/>
                </event>
                <event name="OnNewSelectedIODDWriteMessage">
                    <trait>released</trait>
                    <desc>Event to show selected write message.</desc>
                    <param desc="Name of the write message." multiplicity="1" name="messageName" type="string"/>
                </event>
                <event name="OnNewListIODDReadMessages">
                    <trait>released</trait>
                    <desc>Event to provide list of created read messages.</desc>
                    <param desc="List of created read messages." multiplicity="1" name="jsonList" type="string"/>
                </event>
                <event name="OnNewListIODDWriteMessages">
                    <trait>released</trait>
                    <desc>Event to provide list of created write messages.</desc>
                    <param desc="List of created write messages." multiplicity="1" name="jsonList" type="string"/>
                </event>
                <event name="OnNewTriggerType">
                    <trait>released</trait>
                    <desc>Event to show the selected trigger type of selected read message.</desc>
                    <param desc="'Periodic' or 'On event'" multiplicity="1" name="triggerType" type="string"/>
                </event>
                <event name="OnNewTriggerValue">
                    <trait>released</trait>
                    <desc>Event to show the selected trigger value of selected read message.</desc>
                    <param desc="Period in [ms] or name of CROWN event." multiplicity="1" name="triggerValue" type="string"/>
                </event>
                <event name="OnNewIOLinkPortStatus">
                    <trait>released</trait>
                    <desc>Notify new status of the IO-Link port.</desc>
                    <param desc="Instance ID." multiplicity="1" name="instance" type="int"/>
                    <param desc="Port status." multiplicity="1" name="status" type="string"/>
                </event>
                <event name="OnNewReadDataSuccess">
                    <trait>released</trait>
                    <desc>Event to show the success of reading message after the refresh button has been pressed in UI.</desc>
                    <param desc="True if successful." multiplicity="1" name="success" type="bool"/>
                </event>
                <event name="OnNewWriteDataSuccess">
                    <trait>released</trait>
                    <desc>Event to show the latest success of writing message to IO-Link device after refresh button has been pressed. </desc>
                    <param desc="True if successful." multiplicity="1" name="success" type="bool"/>
                </event>
                <event name="OnNewWriteDataMessage">
                    <trait>released</trait>
                    <desc>Event to show the latest payload of write message sent to IO-Link device after refresh button has been pressed. </desc>
                    <param desc="JSON message payload." multiplicity="1" name="message" type="string"/>
                </event>
                <event name="OnNewReadDataMessage">
                    <trait>released</trait>
                    <desc>Event to show the received message after the refresh button has been pressed in UI.</desc>
                    <param desc="Received message." multiplicity="1" name="message" type="string"/>
                </event>
                <event name="OnNewReadProcessDataByteArray">
                    <trait>released</trait>
                    <desc>Event to show the received byte array after reading the process data from IO-Link device for testing purposes.</desc>
                    <param desc="Byte array in dec format." multiplicity="1" name="processDataByteArray" type="string"/>
                </event>
                <event name="OnNewReadParameterByteArray">
                    <trait>released</trait>
                    <desc>Event to show the received byte array after reading the configured parameter from IO-Link device for testing purposes.</desc>
                    <param desc="Byte array in dec format." multiplicity="1" name="receivedByteArray" type="string"/>
                </event>
                <event name="OnNewTestCommandState">
                    <trait>released</trait>
                    <desc>Event to show latest status of reading or writing raw byte arrays from/to IO-Link device for testing purpuses.</desc>
                    <param desc="Latest status." multiplicity="1" name="state" type="string"/>
                </event>
                <event name="OnNewDeviceIdentificationApplied">
                    <trait>released</trait>
                    <desc>Notify if device identification of new discovered device is applied instead of the old one.</desc>
                    <param desc="Instance ID." multiplicity="1" name="instance" type="int"/>
                    <param desc="JSON object containing all parameters of the instance." multiplicity="1" name="jsonInstanceParameters" type="string"/>
                </event>
                <event name="OnNewStatusIODDReadMessageSelected">
                    <trait>released</trait>
                    <desc>Event to inform if the read message is selected in UI. Used to show settings in UI.</desc>
                    <param desc="True if selected." multiplicity="1" name="isSelected" type="bool"/>
                </event>
                <event name="OnNewStatusIODDWriteMessageSelected">
                    <trait>released</trait>
                    <desc>Event to inform if the write message is selected in UI. Used to show settings in UI.</desc>
                    <param desc="True if selected." multiplicity="1" name="isSelected" type="bool"/>
                </event>
                <event name="OnNewTestWriteIODDMessage">
                    <trait>released</trait>
                    <desc>Event to show the edited JSON payload of write message be sent to IO-Link device for testing purposes.</desc>
                    <param desc="JSON payload which must have the same structure as JSON template of configured write message." multiplicity="1" name="testWriteIODDMessage" type="string"/>
                </event>
                <event name="OnNewStatusCSKIODDInterpreterAvailable">
                    <trait>released</trait>
                    <desc>Event to show if there is available CSK IODD interpreter in the project.</desc>
                    <param desc="True if available." multiplicity="1" name="isAvailable" type="bool"/>
                </event>
                <event name="OnNewStatusIODDMatchFound">
                    <trait>released</trait>
                    <desc>Event to notify if there is a matching IODD file found by IODD interpreter module.</desc>
                    <param desc="True if the match is found." multiplicity="1" name="isFound" type="bool"/>
                </event>
                <event name="OnNewReadMessageEventName">
                    <trait>released</trait>
                    <desc>Event to show the event name that can be used externally.</desc>
                    <param desc="Name of the event." multiplicity="1" name="eventName" type="string"/>
                </event>
                <event name="OnNewWriteMessageFunctionName">
                    <trait>released</trait>
                    <desc>Event to notify the name of the write data function that can be used externally.</desc>
                    <param desc="Name of the function." multiplicity="1" name="functionName" type="string"/>
                </event>
                <function name="setParameterName">
                    <desc>Function to set the name of the parameters if saved/loaded via the CSK_PersistentData module.</desc>
                    <param desc="Name of the parameter" multiplicity="1" name="name" type="string"/>
                </function>
                <function name="sendParameters">
                    <desc>Send parameters to CSK_PersistentData module if possible to save them.</desc>
                </function>
                <function name="loadParameters">
                    <desc>Load parameters for this module from the CSK_PersistentData module if possible and use them.</desc>
                </function>
                <function name="setLoadOnReboot">
                    <desc>Configure if this module should load its saved parameters at app/ device boot up.</desc>
                    <param desc="Set status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="pageCalled">
                    <desc>Function to register "OnResume" of the module UI (only as helper function).</desc>
                    <return desc="Empty string (only needed to simplify binding)." multiplicity="1" name="empty" type="string"/>
                </function>
                <function name="setSelectedInstance">
                    <desc>Select one of the multiple instances.</desc>
                    <param desc="Instance to select." multiplicity="1" name="instance" type="int"/>
                </function>
                <function name="getInstancesAmount">
                    <desc>Get the amount of created instances of this module.</desc>
                    <return desc="Amount of created instances." multiplicity="1" name="amount" type="int"/>
                </function>
                <function name="addInstance">
                    <desc>Function to add an additional instance.</desc>
                </function>
                <function name="resetInstances">
                    <desc>Function to reset instances to one single instance. +
IMPORTANT: As instances start their own threads, the module needs to be restarted if new instances are needed... (see AppEngine docu for "Script.startScript").</desc>
                </function>
                <function name="activateInstance">
                    <desc>Activate or deactivate the instance.</desc>
                    <param desc="True = active" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setPort">
                    <desc>Set an IO-Link port for selected instance.</desc>
                    <param desc="IO-Link sensor port." multiplicity="1" name="port" type="string"/>
                </function>
                <function name="getInstanceParameters">
                    <desc>Get all parameters of the instance</desc>
                    <param desc="Number ID of instance" multiplicity="1" name="instanceNo" type="int"/>
                    <return desc="Parameters in JSON format" multiplicity="1" name="jsonParameters" type="auto"/>
                </function>
                <function name="updateInstanceParameters">
                    <desc>Update all parameters of specified instance. Following is sample structure of JSON table with parameters: +
``` json
{
    "active":false,
        "periodDuration":1000,
	"port":"S1",
	"ReadPD":
	[
		{
			"DataInfo":"DT50_distance",
			"DataType":"UINT",
			"StartBit":0,
			"BitLength":16,
			"Period":1,
		},
	],
	"WritePD":[],
	"ReadSD":
	[
		{
			"DataInfo":"DT50_process_data_structure",
			"DataType":"UINT",
			"Index":120
			"Subindex":0,
			"Period":3,
		},
		{
			"DataInfo":"DT50_sensor_temperature",
			"DataType":"INT",
			"Index":153
			"Subindex":0,
			"Period":3,
		}
	],
	"WriteSD":
	[
		{
			"DataInfo":"DT50_process_data_structure"
			"DataType":"UINT",
			"DataLength":1,
			"Index":120,
			"Subindex":0,
			"Period":0,
		}
	]
}
```</desc>
                    <param desc="Parameters in JSON format" multiplicity="1" name="jsonNewParameters" type="auto"/>
                </function>
                <function name="handleOnNewPortEvent">
                    <desc>Internally used function triggered when the new event occurs in IO-Link port.</desc>
                    <param desc="Port where the event occured." multiplicity="1" name="port" ref="IOLinkMasterPorts" type="enum"/>
                    <param desc="Type of the event." multiplicity="1" name="eventType" ref="IOLink.SMI.EventTypes" type="enum"/>
                    <param desc="Event code as described within IO-Link Interface specification annex C." multiplicity="1" name="eventCode" type="int"/>
                </function>
                <function name="getDeviceIdentification">
                    <trait>released</trait>
                    <desc>Get identification of a device connected to a specified port. The identification contains the following parameters: +
*statusInfo - status of the IO-Link port +
*deviceId +
*vendorId +
*vendorText +
*productName +
*productText +
*serialNumber +
*hardwareVersion +
*firmwareVersion</desc>
                    <param desc="IO-Link port with connected device." multiplicity="1" name="port" type="string"/>
                    <return desc="JSON object with device identification." multiplicity="1" name="jsonDeviceIdentification" type="string"/>
                </function>
                <function name="applyNewDeviceIdentificationUI">
                    <trait>released</trait>
                    <desc>Delete settings for previous device and continue with new discovered device. Triggered by UI button.</desc>
                </function>
                <function name="setProcessDataCondition">
                    <trait>released</trait>
                    <desc>Set process data structure varient if the structure is variable. The respective value will be sent to the parameter responsible for the structure.</desc>
                    <param desc="New condition string parced based on IODD file content." multiplicity="1" name="newCondition" type="string"/>
                </function>
                <function name="writeParameter">
                    <trait>released</trait>
                    <desc>Write parameter to IO-Link sensor in case the IODD description of the parameter is available.</desc>
                    <param desc="Index of the parameter." multiplicity="1" name="index" type="int"/>
                    <param desc="Subindex of the parameter." multiplicity="1" name="subindex" type="int"/>
                    <param desc="JSON object with data to write to the IO-Link device." multiplicity="1" name="jsonDataToWrite" type="string"/>
                    <return desc="Success of writing." multiplicity="1" name="writeSuccess" type="bool"/>
                </function>
                <function name="readParameter">
                    <trait>released</trait>
                    <desc>Read parameter of IO-Link sensor in case the IODD description of the parameter is available.</desc>
                    <param desc="Index of the parameter." multiplicity="1" name="index" type="int"/>
                    <param desc="Subindex of the parameter." multiplicity="1" name="subindex" type="int"/>
                    <return desc="Success of reading." multiplicity="1" name="readSuccess" type="bool"/>
                    <return desc="Received data converted using IODD interpretation." multiplicity="?" name="readResult" type="string"/>
                </function>
                <function name="setSelectedTab">
                    <trait>released</trait>
                    <desc>Select tab in UI.</desc>
                    <param desc="ID of the tab." multiplicity="1" name="tabNumber" type="int"/>
                </function>
                <function name="createIODDReadMessage">
                    <trait>released</trait>
                    <desc>Create a new data set to read from device with the help of IODD interpreter.</desc>
                </function>
                <function name="createIODDWriteMessage">
                    <trait>released</trait>
                    <desc>Create a new data set to write to device with the help of IODD interpreter.</desc>
                </function>
                <function name="deleteIODDReadMessage">
                    <trait>released</trait>
                    <desc>Delete created data set.</desc>
                </function>
                <function name="deleteIODDWriteMessage">
                    <trait>released</trait>
                    <desc>Delete created data set.</desc>
                </function>
                <function name="setSelectedIODDReadMessage">
                    <trait>released</trait>
                    <desc>Select a read message to edit.</desc>
                    <param desc="Name of the message." multiplicity="1" name="newSelectedMessage" type="string"/>
                </function>
                <function name="setSelectedIODDWriteMessage">
                    <trait>released</trait>
                    <desc>Select a write message to edit.</desc>
                    <param desc="Name of the message." multiplicity="1" name="newSelectedMessage" type="string"/>
                </function>
                <function name="setIODDReadMessageName">
                    <trait>released</trait>
                    <desc>Set title of the message to read from IO-Link device.</desc>
                    <param desc="New name." multiplicity="1" name="newName" type="string"/>
                </function>
                <function name="setIODDWriteMessageName">
                    <trait>released</trait>
                    <desc>Set title of the message to write to IO-Link device.</desc>
                    <param desc="New name." multiplicity="1" name="newName" type="string"/>
                </function>
                <function name="setTriggerType">
                    <trait>released</trait>
                    <desc>Set condition of when to read the selected read message. Possible options: +
*Periodic - the message is periodically requested from the IO-Link device. The period can be set by setTriggerValue function. +
*On event- the message is requested from the IO-Link device when some event is notified. The event can be set by setTriggerValue function.</desc>
                    <param desc="'Periodic' or 'On event'" multiplicity="1" name="newTriggerType" type="string"/>
                </function>
                <function name="setTriggerValue">
                    <trait>released</trait>
                    <desc>Set value depending on the selected trigger type of the selected read message. +
*if type is 'Periodic' - period in [ms]. +
*if type is 'On event' - name of served CROWN event.</desc>
                    <param desc="Period in [ms] or name of served CROWN event." multiplicity="1" name="newTriggerValue" type="string"/>
                </function>
                <function name="applyNewDeviceIdentification">
                    <trait>released</trait>
                    <desc>Set device identification of a new device.</desc>
                    <param desc="Json table containing the device identification." multiplicity="1" name="jsonNewDeviceIdentification" type="string"/>
                </function>
                <function name="makeDefaultInstance">
                    <desc>Set all instance parameters to default values.</desc>
                </function>
                <function name="refreshWriteDataResult">
                    <trait>released</trait>
                    <desc>Function to show the latest write result of the selected message in UI.</desc>
                </function>
                <function name="refreshReadDataResult">
                    <trait>released</trait>
                    <desc>Function to show the latest read result of the selected message in UI.</desc>
                </function>
                <function name="setProcessDataByteArrayToWrite">
                    <trait>released</trait>
                    <desc>Set byte array to write to the process data of the device for testing purposes in UI.</desc>
                    <param desc="Byte array in dec format where bytes are separated by comma. E.g. 1,12,123" multiplicity="1" name="processDataByteArray" type="string"/>
                </function>
                <function name="setTestReadParameterIndex">
                    <trait>released</trait>
                    <desc>Set index of the parameter to read as byte array in UI.</desc>
                    <param desc="Index of the parameter." multiplicity="1" name="index" type="int"/>
                </function>
                <function name="setTestReadParameterSubindex">
                    <trait>released</trait>
                    <desc>Set subindex of the parameter to read as byte array in UI.</desc>
                    <param desc="Subindex of the parameter." multiplicity="1" name="subindex" type="int"/>
                </function>
                <function name="setTestWriteParameterIndex">
                    <trait>released</trait>
                    <desc>Set index of the parameter to write as byte array in UI.</desc>
                    <param desc="Index of the parameter." multiplicity="1" name="index" type="int"/>
                </function>
                <function name="setTestWriteParameterSubindex">
                    <trait>released</trait>
                    <desc>Set subindex of the parameter to write as byte array in UI.</desc>
                    <param desc="" multiplicity="1" name="subindex" type="int"/>
                </function>
                <function name="setParameterByteArrayToWrite">
                    <trait>released</trait>
                    <desc>Set byte array to write to the parameter of the device for testing purposes in UI.</desc>
                    <param desc="Byte array in dec format where bytes are separated by comma. E.g. 1,12,123" multiplicity="1" name="byteArrayToWrite" type="string"/>
                </function>
                <function name="readParameterByteArrayUI">
                    <trait>released</trait>
                    <desc>Read parameter of IO-Link sensor as a raw byte array to show it in UI.</desc>
                </function>
                <function name="readProcessDataByteArray">
                    <trait>released</trait>
                    <desc>Read process data of IO-Link sensor as a raw byte array. Might be useful for testing. If reading failed, returns nil.</desc>
                    <return desc="Received byte array in dec format." multiplicity="*" name="resultByteArray" type="int"/>
                </function>
                <function name="writeProcessDataByteArray">
                    <trait>released</trait>
                    <desc>Write process data to IO-Link sensor as a raw byte array. Might be useful for testing.</desc>
                    <param desc="Byte array in dec format." multiplicity="*" name="byteArrayToWrite" type="int"/>
                    <return desc="Success of writing." multiplicity="1" name="success" type="bool"/>
                    <return desc="Optional error description if writing failed." multiplicity="?" name="errorDescription" type="string"/>
                </function>
                <function name="writeParameterByteArray">
                    <trait>released</trait>
                    <desc>Write parameter to IO-Link sensor as a raw byte array. Might be useful for testing.</desc>
                    <param desc="Index of the parameter." multiplicity="1" name="index" type="int"/>
                    <param desc="Subndex of the parameter." multiplicity="1" name="subindex" type="int"/>
                    <param desc="Byte array in dec format." multiplicity="*" name="byteArrayToWrite" type="int"/>
                    <return desc="Success of writing." multiplicity="1" name="success" type="bool"/>
                    <return desc="Optional error description if writing failed." multiplicity="?" name="errorDescription" type="string"/>
                </function>
                <function name="setTestWriteIODDMessage">
                    <trait>released</trait>
                    <desc>Set JSON content of message to write to device. The content must have the same format as JSON template of the selected message (template is generated based on selected paramters/process data).</desc>
                    <param desc="JSON data to write to the device." multiplicity="1" name="newTestWriteIODDMessage" type="string"/>
                </function>
                <function name="writeIODDMessageFromUI">
                    <trait>released</trait>
                    <desc>Write configured message to IO-Link sensor from UI.</desc>
                </function>
                <function name="writeIODDMessage">
                    <trait>released</trait>
                    <desc>Write configured message to IO-Link sensor.</desc>
                    <param desc="Name of the configured message." multiplicity="1" name="messageName" type="string"/>
                    <param desc="Data to write to the IO-Link device in JSON format." multiplicity="1" name="jsonDataToWrite" type="string"/>
                    <return desc="Success of writing the message." multiplicity="1" name="success" type="bool"/>
                </function>
                <function name="readIODDMessage">
                    <trait>released</trait>
                    <desc>Read configured message from IO-Link sensor.</desc>
                    <param desc="Name of the configured message." multiplicity="1" name="messageName" type="string"/>
                    <return desc="Success of reading the message." multiplicity="1" name="success" type="bool"/>
                    <return desc="Received message in JSON format." multiplicity="?" name="jsonReceivedData" type="string"/>
                </function>
                <function name="readIODDMessageUI">
                    <trait>released</trait>
                    <desc>Read configured message from IO-Link sensor from UI.</desc>
                </function>
                <function name="readParameterByteArray">
                    <trait>released</trait>
                    <desc>Read parameter of IO-Link sensor as a raw byte array. Might be useful for testing.  If reading failed, returns nil.</desc>
                    <param desc="Index of the parameter." multiplicity="1" name="index" type="int"/>
                    <param desc="Subindex of the parameter." multiplicity="1" name="subindex" type="int"/>
                    <return desc="Received byte array in dec format." multiplicity="*" name="resultByteArray" type="int"/>
                </function>
                <function name="readProcessDataByteArrayUI">
                    <trait>released</trait>
                    <desc>Read process data of IO-Link sensor as a raw byte array to show it in UI.</desc>
                </function>
                <function name="writeParameterByteArrayUI">
                    <trait>released</trait>
                    <desc>Write parameter to IO-Link device as a raw byte array triggered by button in UI.</desc>
                </function>
                <function name="writeProcessDataByteArrayUI">
                    <trait>released</trait>
                </function>
                <function name="readProcessData">
                    <trait>released</trait>
                    <desc>Read parameter of IO-Link sensor in case the IODD description of the parameter is available.</desc>
                    <return desc="Success of reading." multiplicity="1" name="readSuccess" type="bool"/>
                    <return desc="JSON object with received data if reading is successful." multiplicity="?" name="readResult" type="string"/>
                </function>
                <function name="writeProcessData">
                    <trait>released</trait>
                    <desc>Write process data to IO-Link sensor in case the IODD description of the parameter is available.</desc>
                    <param desc="JSON object with data to write to the IO-Link device." multiplicity="1" name="jsonDataToWrite" type="string"/>
                    <return desc="Success of writing." multiplicity="1" name="writeSuccess" type="bool"/>
                </function>
                <function name="readProcessDataIODD_NUM">
                    <trait>released</trait>
                    <desc>Read process data with provided info from IODD interpreter (as JSON table) and convert it to a meaningful JSON table. +
NUM will be replaced by the number of instance (e.g. "readProcessDataIODD_1").</desc>
                    <param desc="JSON table containing process data info from IODD file" multiplicity="1" name="jsonDataPointInfo" type="string"/>
                    <return desc="JSON table with interpted read data" multiplicity="?" name="convertedResult" type="string"/>
                </function>
                <function name="readProcessDataByteArray_NUM">
                    <trait>released</trait>
                    <desc>Read process data and return it as byte array in IO-Link JSON standard, for example: +
{ +
  "value":[232,12,1] +
} +
NUM will be replaced by the number of instance (e.g. "readProcessDataByteArray_1").</desc>
                    <return desc="JSON array with decimal values" multiplicity="?" name="byteArrayData" type="string"/>
                </function>
                <function name="writeProcessDataIODD_NUM">
                    <trait>released</trait>
                    <desc>Write process data with provided info from IODD interpreter and data to write (as JSON tables). +
NUM will be replaced by the number of instance (e.g. "writeProcessDataIODD_1").
</desc>
                    <param desc="JSON table containing process data info from IODD file." multiplicity="1" name="jsonDataPointInfo" type="string"/>
                    <param desc="JSON table with process data to be written." multiplicity="1" name="jsonData" type="string"/>
                    <return desc="Success of writing." multiplicity="1" name="success" type="bool"/>
                    <return desc="Detailed error if writing is not successful." multiplicity="?" name="details" type="string"/>
                </function>
                <function name="writeProcessDataByteArray_NUM">
                    <trait>released</trait>
                    <desc>Write process data as byte array in IO-Link JSON standard, for example: +
{ +
  "value":[232,12,1] +
} +
NUM will be replaced by the number of instance (e.g. "writeProcessDataByteArray_1"). +</desc>
                    <param desc="JSON byte array with process data to be written." multiplicity="1" name="jsonData" type="string"/>
                    <return desc="Success of writing." multiplicity="1" name="success" type="bool"/>
                    <return desc="Detailed error if writing is not successful." multiplicity="?" name="details" type="string"/>
                </function>
                <function name="readParameterIODD_NUM">
                    <trait>released</trait>
                    <desc>Read parameter with provided info from IODD interpreter (as JSON table) and convert it to a meaningful JSON table. +
NUM will be replaced by the number of instance (e.g. "readParameterIODD_1"). +

</desc>
                    <param desc="Index of the parameter." multiplicity="1" name="index" type="auto"/>
                    <param desc="Subindex of the parameter." multiplicity="1" name="subindex" type="auto"/>
                    <param desc="JSON table containing parameter info from IODD file." multiplicity="1" name="jsonDataPointInfo" type="string"/>
                    <return desc="JSON table with interpted parameter value." multiplicity="?" name="jsonData" type="string"/>
                </function>
                <function name="readParameterByteArray_NUM">
                    <trait>released</trait>
                    <desc>Read paramerter and return it as byte array in IO-Link JSON standard, for example: +
{ +
  "value":[232,12,1] +
} +
NUM will be replaced by the number of instance (e.g. "readParameterByteArray_1").
</desc>
                    <param desc="Index of the parameter." multiplicity="1" name="index" type="auto"/>
                    <param desc="Subindex of the parameter." multiplicity="1" name="subindex" type="auto"/>
                    <return desc="JSON array with decimal values." multiplicity="?" name="byteArrayData" type="string"/>
                </function>
                <function name="writeParameterIODD_NUM">
                    <trait>released</trait>
                    <desc>Write parameter with provided info from IODD interpreter and data to write (as JSON tables). +
NUM will be replaced by the number of instance (e.g. "writeParameterIODD_1").</desc>
                    <param desc="Index of the parameter." multiplicity="1" name="index" type="auto"/>
                    <param desc="Subindex of the parameter." multiplicity="1" name="subindex" type="auto"/>
                    <param desc="JSON table containing parameter info from IODD file." multiplicity="1" name="jsonDataPointInfo" type="string"/>
                    <param desc="JSON table with parameter value to be written." multiplicity="1" name="jsonDataToWrite" type="string"/>
                    <return desc="Success of writing." multiplicity="1" name="success" type="bool"/>
                    <return desc="Detailed error if writing is not successful" multiplicity="?" name="details" type="string"/>
                </function>
                <function name="writeParameterByteArray_NUM">
                    <trait>released</trait>
                    <desc>Write parameter as byte array in IO-Link JSON standard, for example: +
{ +
  "value":[232,12,1] +
} +
NUM will be replaced by the number of instance (e.g. "writeParameterByteArray_1").
</desc>
                    <param desc="Index of the parameter." multiplicity="1" name="index" type="auto"/>
                    <param desc="Subindex of the parameter." multiplicity="1" name="subindex" type="auto"/>
                    <param desc="JSON byte array with parameter value to be written." multiplicity="1" name="jsonDataToWrite" type="string"/>
                    <return desc="Success of writing." multiplicity="1" name="success" type="int"/>
                    <return desc="Detailed error if writing is not successful." multiplicity="?" name="details" type="string"/>
                </function>
                <function name="readIODDMessageNUM">
                    <trait>released</trait>
                    <desc>Read preconfigured message. +
NUM will be replaced by the number of instance (e.g. "readIODDMessage1").
</desc>
                    <param desc="Name of the message to read." multiplicity="1" name="messageName" type="string"/>
                    <return desc="Success of reading." multiplicity="1" name="success" type="bool"/>
                    <return desc="JSON table with received message content." multiplicity="?" name="jsonMessageContent" type="string"/>
                </function>
                <function name="getReadDataResultNUM">
                    <trait>released</trait>
                    <desc> Get the latest result of readinig message. +
NUM will be replaced by the number of instance (e.g. "getReadDataResult1"). +</desc>
                    <param desc="Name of the message to get the latest data about." multiplicity="1" name="messageName" type="string"/>
                    <return desc="Latest success of reading." multiplicity="?" name="latestSuccess" type="bool"/>
                    <return desc="Latest JSON table with received message content." multiplicity="?" name="jsonMessageContent" type="string"/>
                </function>
                <function name="writeIODDMessageNUM">
                    <trait>released</trait>
                    <desc>Write preconfigured message. +
NUM will be replaced by the number of instance (e.g. "writeIODDMessage1").
</desc>
                    <param desc="Name of the message to read." multiplicity="1" name="messageName" type="string"/>
                    <param desc="JSON table with message to be written." multiplicity="1" name="jsonDataToWrite" type="string"/>
                    <return desc="Success of writing." multiplicity="1" name="success" type="bool"/>
                    <return desc="Detailed error if writing is not successful." multiplicity="?" name="details" type="string"/>
                </function>
                <function name="getWriteDataResultNUM">
                    <trait>released</trait>
                    <desc>Get the latest result of writng message. +
NUM will be replaced by the number of instance (e.g. "getWriteDataResult1").
</desc>
                    <param desc="Name of the message to get the latest data about." multiplicity="1" name="messageName" type="string"/>
                    <return desc="Latest success of writing." multiplicity="1" name="success" type="bool"/>
                    <return desc="JSON table with latest sent message content." multiplicity="?" name="jsonMessageContent" type="string"/>
                </function>
                <function name="getIODDReadMessageJSONTemplate">
                    <trait>released</trait>
                    <desc>Function to get the JSON template of the message that will be read from IO-Link device.</desc>
                    <param desc="Name of the message." multiplicity="1" name="messageName" type="string"/>
                    <return desc="Template in JSON format." multiplicity="?" name="jsonTemplate" type="string"/>
                </function>
                <function name="getIODDWriteMessageJSONTemplate">
                    <trait>released</trait>
                    <desc>Function to get the JSON template of the message that is expected to be written to IO-Link device.</desc>
                    <param desc="Name of the message." multiplicity="1" name="messageName" type="string"/>
                    <return desc="Template in JSON format." multiplicity="?" name="jsonTemplate" type="string"/>
                </function>
            </serves>
        </crown>
        <meta key="author">SICK AG</meta>
        <meta key="version">1.0.0</meta>
        <meta key="priority">low</meta>
        <meta key="copy-protected">false</meta>
        <meta key="read-protected">false</meta>
        <meta key="crown2-flow-engine">false</meta>
        <meta key="LuaLoadAllEngineAPI">false</meta>
        <entry default="CSK_Module_MultiIOLinkSMI.lua" path="scripts"/>
    </application>
</manifest>
